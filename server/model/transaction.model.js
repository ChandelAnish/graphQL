import mongoose from "mongoose";

const transactionSchema = new mongoose.Schema({
    userId:{
        type: mongoose.Schema.Types.ObjectId,//When you write type: mongoose.Schema.Types.ObjectId in your Mongoose schema, you're saying: "This field will store an ObjectId." This is usually done when you want to link two collections (tables).
        //This field will store an ObjectId, which is usually used to refer to other documents in the database
        //ObjectId is a unique identifier automatically generated by MongoDB for each document. It's like a special ID that helps MongoDB keep track of each document (like a unique key for a row in a table).
        //type: mongoose.Schema.Types.ObjectId is used to define a field in a MongoDB document (record) that stores a special kind of value called an ObjectId
        //This allows you to create relationships between data in different collection

        ref:"User",//The ref option tells Mongoose that this userId refers to another collection, specifically the User model.
        require:true,
    },
    description:{
        type:String,
        require:true,
    },
    paymentType:{
        type:String,
        enum:["cash","card"],
        require:true,
    },
    catagory:{
        type:String,
        enum: ["saving","expenses","investment"],
        require:true,
    },
    amount:{
        type:String,
        required: true
    },
    location:{
        type:String,
        default:""
    },
    date:{
        type:Date,
        required: true
    },
},{timestamps: true})


export default mongoose.model("Transaction",transactionSchema)